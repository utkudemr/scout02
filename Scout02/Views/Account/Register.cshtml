@model Scout02.Identity.RegisterViewModel
@{
    ViewBag.Title = "Kaydol";
}
<link href="~/Styles/Register.css" rel="stylesheet" />
@Styles.Render("~/Content/css")

<hr />

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h4 class="iconEdit">Yeni hesap oluşturun.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="form-group col-md-7">
        <div class="iconEdit">
            <i class="fa fa-user pt-1"></i>
            @Html.LabelFor(m => m.Name, new { @class = "col-md-4 control-label yazi" })
        </div>
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group col-md-7">
        <div class="iconEdit">
            <i class="fa fa-user pt-1"></i>
            @Html.LabelFor(m => m.Surname, new { @class = "col-md-4 control-label yazi" })
        </div>
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group col-md-6">
        <div class="iconEdit">
            <i class="fa fa-user-circle pt-1"></i>
            @Html.LabelFor(m => m.Username, new { @class = "col-md-4 control-label yazi" })
        </div>
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group col-md-6">
        <div class="iconEdit ">
            <i class="fa fa-envelope pt-1"></i>
            @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label yazi" })
        </div>
        <div class="col-md-12">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group col-md-7">
        <div class="iconEdit">
            <i class="fa fa-calendar pt-1"></i>
            @Html.LabelFor(model => model.Birthday, new { @class = "col-md-4 control-label yazi" })
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "datepicker" } })
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group col-md-7">
        <div class="iconEdit">
            <i class="fa fa-genderless pt-1"></i>
            @Html.LabelFor(m => m.Gender, new { @class = "col-md-4 control-label yazi" })
        </div>
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-3"> @Html.RadioButtonFor(m => m.Gender, true)  <i class="fa fa-male"></i>&nbsp&nbspErkek</div>

                <div class="col-md-3">@Html.RadioButtonFor(m => m.Gender, false, new { id = "radio", @class = "justify-content-start" })<i class="fa fa-female"></i>&nbsp&nbspKadın</div>
                @Html.ValidationMessageFor(m => m.Gender)
            </div>
        </div>
    </div>
    <div class="form-group col-md-7">
        <div class="iconEdit">
            <i class="fa fa-key pt-1"></i>
            @Html.LabelFor(m => m.ImagePath, new { @class = "col-md-4 control-label yazi" })
        </div>
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.ImagePath, new { type = "file", id="imageBrowes" })
        </div>
        <div id="imgPreview" class="thumbnail col-md-7" style="display:none;">
            <img id="targetImg" style="width:200px; height:200px;" />
            <div class="caption">
                <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                <span id="description"></span>
            </div>
        </div>

    </div>
    <div class="form-group col-md-7">
        <div class="iconEdit">
            <i class="fa fa-key pt-1"></i>
            @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label yazi" })
        </div>
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group col-md-7">
        <div class="iconEdit">
            <i class="fa fa-check-circle pt-1"></i>
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label yazi" })
        </div><div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group col-md-7">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Kaydol" />
        </div>
    </div>
    <div class="col-md-6 d-none d-lg-block d-print-block sliderProp" id="sliderP">
        <img src="~/Img/nightwing.jpg" class="w-100" id="mainImage" />
        <ul id="slider">
            <li><img src="~/Img/vandal.jpg" class="w-100 myImages" /></li>
            <li><img src="~/Img/witchboy.png" class="w-100 myImages" /></li>
        </ul>
    </div>
}



<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section Scripts {
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")



    <script>
        $(document).ready(function () {
            $('#imageBrowes').change(function () {
                debugger
                var File = this.files;
                if (File && File[0]) {
                    ReadImage(File[0]);
                }
            });
            //setInterval(slideR, 1500);
            $(".datepicker").datepicker({
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                changeYear: true,
                showOn: "both",
                yearRange: "1900:@DateTime.Now.Year",
                buttonText: "<i class='fa fa-calendar'></i>"
            });
        });

        var ReadImage = function (file) {

            var reader = new FileReader;
            var image = new Image;
            reader.readAsDataURL(file);
            reader.onload = function (_file) {

                image.src = _file.target.result;
                image.onload = function () {

                    var height = this.height;
                    var width = this.width;
                    var type = file.type;
                    var size = ~~(file.size / 1024) + "KB";

                    $("#targetImg").attr('src', _file.target.result);
                    $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                    $("#imgPreview").show();

                }

            }

        }
        var ClearPreview = function () {
            $("#imageBrowes").val('');
            $("#description").text('');
            $("#imgPreview").hide();

        }
      //  var url = new Array();
      //  $('#sliderP img').each(function () {
      //      url.push($(this).attr('src'));
      //  });
      //  function slideR() {
      //      debugger
      //      var image = $('#mainImage');
      //      var currentImageURL = image.attr('src');
      //      var currentImageIndex = $.inArray(currentImageURL, url);
      //      if (currentImageIndex == (url.length - 1))
      //      {
      //          currentImageIndex = -1;
      //      }
      //      //image.attr('src', url[currentImageIndex + 1]);
      //      image.fadeOut(1000,function () {
      //          $(this).attr('src', url[currentImageIndex + 1]).fadeIn(1000);
      //      });
      //}




    </script>
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")